;;; This file is automatically generated from file `literate-lisp.org'.
;;; Please read file `literate-lisp.org' to find out the usage and implementation detail of this source file.

(in-package :literate-lisp)

(eval-when (:compile-toplevel :load-toplevel :execute)
  (unless (find-package :fiveam)
    #+quicklisp (ql:quickload :fiveam)
    #-quicklisp (asdf:load-system :fiveam)))
(5am:def-suite literate-lisp-suite :description "The test suite of literate-lisp.")
(5am:in-suite literate-lisp-suite)

(5am:test read-org-code-block-header-arguments
  (5am:is (equal nil (read-org-code-block-header-arguments "" 0)))
  (5am:is (equal '(:load :no) (read-org-code-block-header-arguments " :load no  " 0)))
  (5am:is (equal '(:load :no) (read-org-code-block-header-arguments " :load no" 0))))

(5am:test protect-tangled-file
  (5am:signals (error "The form ~S is expected to signal an ~S"
                      '(error "an error") 'error)
    (let* ((org-file (format nil "~a/readme.org"
                             (asdf:component-pathname (asdf:find-system :literate-lisp))))
           (lisp-file (make-pathname :defaults org-file :type "lisp")))
      (tangle-org-file org-file :output-file lisp-file)
      (with-open-file (stream lisp-file :direction :output)
        (write-line ";; Update lisp file outside." stream))
      (tangle-org-file org-file :output-file lisp-file))))

(defun run-test ()
  (5am:run! 'literate-lisp-suite))

